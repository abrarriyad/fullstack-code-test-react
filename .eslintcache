[{"/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/index.js":"1","/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/App.js":"2","/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/reportWebVitals.js":"3","/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/Services.jsx":"4","/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/Navbar.tsx":"5","/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/Login.tsx":"6","/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/Home.tsx":"7","/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/Register.tsx":"8","/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/ServicePanel.tsx":"9","/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/Logout.tsx":"10","/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/context/TokenContext.tsx":"11","/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/ServiceTable.tsx":"12","/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/AddService.tsx":"13","/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/context/ServiceContext.tsx":"14","/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/deleteService.tsx":"15","/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/Alert.tsx":"16"},{"size":782,"mtime":1609504436719,"results":"17","hashOfConfig":"18"},{"size":996,"mtime":1609766556448,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1609485934544,"results":"20","hashOfConfig":"18"},{"size":5886,"mtime":1609755434376,"results":"21","hashOfConfig":"18"},{"size":2169,"mtime":1609774715801,"results":"22","hashOfConfig":"18"},{"size":3157,"mtime":1609774571944,"results":"23","hashOfConfig":"18"},{"size":639,"mtime":1609774300132,"results":"24","hashOfConfig":"18"},{"size":3039,"mtime":1609774944931,"results":"25","hashOfConfig":"18"},{"size":495,"mtime":1609775008383,"results":"26","hashOfConfig":"18"},{"size":386,"mtime":1609774629112,"results":"27","hashOfConfig":"18"},{"size":762,"mtime":1609778115872,"results":"28","hashOfConfig":"18"},{"size":2216,"mtime":1609778336306,"results":"29","hashOfConfig":"18"},{"size":2165,"mtime":1609772924064,"results":"30","hashOfConfig":"18"},{"size":3493,"mtime":1609778840154,"results":"31","hashOfConfig":"18"},{"size":882,"mtime":1609774232973,"results":"32","hashOfConfig":"18"},{"size":311,"mtime":1609778919977,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1g0acsg",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/index.js",[],["69","70"],"/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/App.js",["71"],"import Navbar from \"./components/Navbar\";\nimport Login from \"./components/Login\";\nimport Home from \"./components/Home\";\nimport Register from \"./components/Register\";\nimport Services from \"./components/Services\";\nimport ServicePanel from \"./components/ServicePanel\";\nimport Logout from \"./components/Logout\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { TokenProvider } from \"./context/TokenContext\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <TokenProvider>\n          <Navbar />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/register\" exact component={Register} />\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/services\" exact component={ServicePanel} />\n            <Route path=\"/logout\" exact component={Logout} />\n          </Switch>\n        </TokenProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/reportWebVitals.js",[],"/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/Services.jsx",["72","73","74"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Services = () => {\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [addServiceAlert, setAddServiceAlert] = useState(false);\n  const [deleteServiceAlert, setDeleteServiceAlert] = useState(false);\n\n  const [service, setService] = useState({\n    name: \"\",\n    url: \"\",\n  });\n  const [serviceList, setServiceList] = useState([]);\n\n  const handleServiceName = (event) => {\n    const val = event.target.value;\n    setService({\n      name: val,\n      url: service.url,\n    });\n  };\n  const handleServiceUrl = (event) => {\n    const val = event.target.value;\n    setService({\n      name: service.name,\n      url: val,\n    });\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"/services\", {\n        headers: {\n          Authorization: \"Bearer \" + token,\n        },\n      })\n      .then((response) => {\n        const services = response.data;\n        setServiceList(services);\n      })\n      .catch((error) => {});\n  }, []);\n\n  useEffect(() => {\n    console.log(\"Updated...\");\n  }, [serviceList]);\n\n  const addService = () => {\n    axios\n      .post(\"/services\", service, {\n        headers: {\n          Authorization: \"Bearer \" + token,\n        },\n      })\n      .then((response) => {\n        console.log(...serviceList);\n        setServiceList([...serviceList, response.data]);\n      })\n      .catch((error) => {});\n  };\n\n  const removeService = () => {\n    axios\n      .delete(\"/services\", {\n        headers: {\n          Authorization: \"Bearer \" + token,\n        },\n      })\n      .then((response) => {\n        setServiceList([]);\n        setDeleteServiceAlert(false);\n        console.log(response);\n      })\n      .catch((error) => {});\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"section\">\n        <div className=\"field has-addons\">\n          <div className=\"control\">\n            <input className=\"input\" type=\"text\" placeholder=\"Search\" />\n          </div>\n          <div className=\"control\">\n            <a className=\"button is-primary is-outlined\">Search</a>\n          </div>\n        </div>\n\n        <div className=\"table-container\">\n          <table className=\"table is-bordered is-hoverable is-striped\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Name</th>\n                <th>Url</th>\n                <th>Status</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {serviceList &&\n                serviceList.map((service) => (\n                  <tr key={service.id}>\n                    <td>{service.id}</td>\n                    <td>{service.name}</td>\n                    <td>{service.url}</td>\n                    <td>{service.status}</td>\n                    <td>\n                      <button className=\"button is-primary is-outlined is-light is-small\">\n                        Edit\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n\n          <div className=\"buttons\">\n            <button\n              onClick={() => {\n                setAddServiceAlert(true);\n              }}\n              className=\"button is-primary is-outlined\"\n            >\n              <span>Add Services</span>\n              <span className=\"icon is-small\">\n                <i className=\"fas fa-plus\"></i>\n              </span>\n            </button>\n            <button\n              onClick={() => {\n                setDeleteServiceAlert(true);\n              }}\n              className=\"button is-danger is-outlined\"\n            >\n              <span>Delete</span>\n              <span className=\"icon is-small\">\n                <i className=\"fas fa-times\"></i>\n              </span>\n            </button>\n          </div>\n          {addServiceAlert && (\n            <div>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input\n                    className=\"input\"\n                    type=\"text\"\n                    placeholder=\"Service Name\"\n                    value={service.name}\n                    onChange={handleServiceName}\n                  />\n                </div>\n              </div>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input\n                    className=\"input\"\n                    type=\"text\"\n                    placeholder=\"Url\"\n                    value={service.url}\n                    onChange={handleServiceUrl}\n                  />\n                </div>\n              </div>\n              <div className=\"field is-grouped\">\n                <div className=\"control\">\n                  <button onClick={addService} className=\"button is-primary\">\n                    Create\n                  </button>\n                </div>\n                <div className=\"control\">\n                  <button\n                    onClick={() => {\n                      setAddServiceAlert(false);\n                    }}\n                    className=\"button is-link is-light\"\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {deleteServiceAlert && (\n        <div className=\"notification is-danger is-light\">\n          Do you want to delete all\n          <strong>Services</strong>?\n          <button\n            onClick={removeService}\n            className=\"button is-outlined is-danger\"\n          >\n            Yes\n          </button>\n          <button\n            onClick={() => {\n              setDeleteServiceAlert(false);\n            }}\n            className=\"button is-link is-success\"\n          >\n            No\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Services;\n","/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/Navbar.tsx",["75","76"],"/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/Login.tsx",[],"/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/Home.tsx",["77"],"/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/Register.tsx",[],"/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/ServicePanel.tsx",["78","79"],"/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/Logout.tsx",[],"/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/context/TokenContext.tsx",["80"],"/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/ServiceTable.tsx",["81","82"],"/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/AddService.tsx",[],"/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/context/ServiceContext.tsx",["83","84","85"],"/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/deleteService.tsx",["86"],"/home/riyad/projects/demo-projects/fullstack-code-test-react/fullstack-code-test-frontend-react/src/components/Alert.tsx",["87"],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":16},{"ruleId":"92","severity":1,"message":"96","line":5,"column":17,"nodeType":"94","messageId":"95","endLine":5,"endColumn":25},{"ruleId":"97","severity":1,"message":"98","line":42,"column":6,"nodeType":"99","endLine":42,"endColumn":8,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":85,"column":13,"nodeType":"103","endLine":85,"endColumn":58},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"107","line":37,"column":31,"nodeType":"108","messageId":"109","endLine":37,"endColumn":33},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"110","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"111","line":1,"column":28,"nodeType":"94","messageId":"95","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"112","line":16,"column":9,"nodeType":"94","messageId":"95","endLine":16,"endColumn":26},{"ruleId":"104","severity":1,"message":"113","line":9,"column":5,"nodeType":"94","messageId":"95","endLine":9,"endColumn":20},{"ruleId":"97","severity":1,"message":"114","line":16,"column":6,"nodeType":"99","endLine":16,"endColumn":8,"suggestions":"115"},{"ruleId":"104","severity":1,"message":"96","line":35,"column":18,"nodeType":"94","messageId":"95","endLine":35,"endColumn":26},{"ruleId":"104","severity":1,"message":"116","line":35,"column":28,"nodeType":"94","messageId":"95","endLine":35,"endColumn":38},{"ruleId":"104","severity":1,"message":"117","line":46,"column":9,"nodeType":"94","messageId":"95","endLine":46,"endColumn":24},{"ruleId":"104","severity":1,"message":"111","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'Services' is defined but never used.","Identifier","unusedVar","'setToken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["120"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'Component' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'useState' is defined but never used.","'changeLoginStatus' is assigned a value but never used.","'addServiceAlert' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getServices'. Either include it or remove the dependency array.",["121"],"'isLoggedIn' is assigned a value but never used.","'updateShowAlert' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [token]",{"range":"126","text":"127"},"Update the dependencies array to be: [getServices]",{"range":"128","text":"129"},[1023,1025],"[token]",[400,402],"[getServices]"]